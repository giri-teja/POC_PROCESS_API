<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="caseys-pa-orders-api-test-suite.xml" />
	


	
	
	<munit:test name="common-orderprocessingFlow-storeAgentSub_Flow-configTest" description="Test" doc:id="08ee07e6-76aa-4935-be7b-2783c08d34d2">
			<munit:behavior>
				<munit-tools:mock-when doc:name="Mock StoreAgent" doc:id="44fca28c-1bd4-4528-800f-a446ce05f05f" processor="http:request">
					<munit-tools:with-attributes />
					<munit-tools:then-return>
						<munit-tools:payload value="#['{&quot;status&quot;:&quot;ok&quot;}']" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:attributes value="#[status:200]" />
						<munit-tools:variables />
					</munit-tools:then-return>
				</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<munit:set-event doc:name="Set Event" doc:id="029855ec-53cb-4e1a-97c8-2bd9de75c6a5" >
			</munit:set-event>
			<flow-ref doc:name="storeAgentSub_Flow" doc:id="805775e6-1c44-416d-a2b1-027668fd60d9" name="storeAgentCalling_Flow" />
			</munit:execution>
			<munit:validation>
				<munit-tools:assert-that doc:name="Assert that" doc:id="03450cf5-d243-4942-a9cb-7c3f7a1f9475" expression="#[payload]" is="#[MunitTools::notNullValue()]" message="Is not Null" />
			</munit:validation>
		</munit:test>
	<munit:test name="common-orderprocessingFlow-DWH:order-Notice-configTest" description="Test" doc:id="174e06a9-11ba-41fb-aa88-9db4b67a9bd7">
			<munit:behavior>
				<munit-tools:mock-when doc:name="Mock DWH" doc:id="eb0a480b-b0c4-4ab8-a2bd-564393ecae4e" processor="http:request">
					<munit-tools:with-attributes />
					<munit-tools:then-return>
						<munit-tools:payload value="#['{&quot;status&quot;:&quot;ok&quot;}']" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:attributes value="#[status:200]" />
						<munit-tools:variables />
					</munit-tools:then-return>
				</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<munit:set-event doc:name="Set Event" doc:id="d16f544b-eea6-42af-ba6a-ddf348e145ce" >
				<munit:payload value="#['info.deferred' : 'NOTICE']" />
			</munit:set-event>
			<flow-ref doc:name="DWH-Sub_Flow" doc:id="6dfad5c1-a98a-4f44-8970-90effda20cab" name="DWH-Sub_Flow" />
			</munit:execution>
			<munit:validation>
				<munit-tools:assert-that doc:name="Assert that" doc:id="4aee563c-59dd-4492-8881-9c7b8674ef9e" expression="#[payload]" is="#[MunitTools::notNullValue()]" message="Is not Null" />
			</munit:validation>
		</munit:test>
	<munit:test name="common-orderprocessingFlow-sfscUpdateSub_Floworder-config" description="Test" doc:id="12433dc1-4010-4ee6-902b-a23b235544f1">
			<munit:behavior>
				<munit-tools:mock-when doc:name="Mock Ssfsc" doc:id="b855380b-9293-4bba-8cf0-43de3bb7ed6c" processor="http:request">
					<munit-tools:with-attributes />
					<munit-tools:then-return>
						<munit-tools:payload value="#['{&quot;status&quot;:&quot;ok&quot;}']" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:attributes value="#[status:200]" />
						<munit-tools:variables />
					</munit-tools:then-return>
				</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="sfscUpdateSub_Flow" doc:id="d99fb9b4-b6bc-452c-839f-b1162789d311" name="sfscUpdateSub_Flow" />
			</munit:execution>
			<munit:validation>
				<munit-tools:assert-that doc:name="Assert that" doc:id="d4c2190c-266c-490c-b840-5eba8fd2db6e" expression="#[payload]" is="#[MunitTools::notNullValue()]" message="Is not Null" />
			</munit:validation>
		</munit:test>
	<munit:test name="common-orderprocessingFlow-sfscSub_Flow-config" description="Test" doc:id="ec9fc7d2-42a7-4665-9e48-6dde01b4e0c3">
			<munit:behavior>
				<munit-tools:mock-when doc:name="Mock Sfsc" doc:id="ac369646-7a2a-48a1-a920-3e6475daf79b" processor="http:request">
					<munit-tools:with-attributes />
					<munit-tools:then-return>
						<munit-tools:payload value="#['{&quot;status&quot;:&quot;ok&quot;}']" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:attributes value="#[status:200]" />
						<munit-tools:variables />
					</munit-tools:then-return>
				</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="sfscSub_Flow" doc:id="01cf9c5d-4674-4813-a07d-0aa400d97de1" name="sfscSub_Flow" />
			</munit:execution>
			<munit:validation>
				<munit-tools:assert-that doc:name="Assert that" doc:id="047d411b-9509-4325-90ba-f31bfea195f6" expression="#[payload]" is="#[MunitTools::notNullValue()]" message="Is not Null" />
			</munit:validation>
		</munit:test>
	


</mule>
